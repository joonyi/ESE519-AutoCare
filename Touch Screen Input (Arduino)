
#include <UTFT.h>
#include <UTouch.h>

// Initialize display
// ------------------
// Set the pins to the correct ones for your development board
// -----------------------------------------------------------
// Standard Arduino Uno/2009 Shield            : <display model>,19,18,17,16
// Standard Arduino Mega/Due shield            : <display model>,38,39,40,41
// CTE TFT LCD/SD Shield for Arduino Due       : <display model>,25,26,27,28
// Teensy 3.x TFT Test Board                   : <display model>,23,22, 3, 4
// ElecHouse TFT LCD/SD Shield for Arduino Due : <display model>,22,23,31,33
//
// Remember to change the model parameter to suit your display module!
UTFT    myGLCD(ITDB32S, 38, 39, 40, 41);

// Initialize touchscreen
// ----------------------
// Set the pins to the correct ones for your development board
// -----------------------------------------------------------
// Standard Arduino Uno/2009 Shield            : 15,10,14, 9, 8
// Standard Arduino Mega/Due shield            :  6, 5, 4, 3, 2
// CTE TFT LCD/SD Shield for Arduino Due       :  6, 5, 4, 3, 2
// Teensy 3.x TFT Test Board                   : 26,31,27,28,29
// ElecHouse TFT LCD/SD Shield for Arduino Due : 25,26,27,29,30
//
UTouch  myTouch( 6, 5, 4, 3, 2);

// Declare which fonts we will be using
extern uint8_t BigFont[];

int x, y;
char stCurrent[20] = "";
int stCurrentLen = 0;
char stLast[20] = "";
int screen = 0;
/*************************
**   Custom functions   **
*************************/

void drawButtons()
{
  // Draw the 1st row of buttons
  for (x = 2; x < 5; x++)
  {
    myGLCD.setColor(0, 0, 255);
    myGLCD.fillRoundRect (10 + (x * 60), 10, 60 + (x * 60), 60);
    myGLCD.setColor(255, 255, 255);
    myGLCD.drawRoundRect (10 + (x * 60), 10, 60 + (x * 60), 60);
    myGLCD.printNumI(x - 1, 27 + (x * 60), 27);
  }
  // Draw the 2nd row of buttons
  for (x = 2; x < 5; x++)
  {
    myGLCD.setColor(0, 0, 255);
    myGLCD.fillRoundRect (10 + (x * 60), 70, 60 + (x * 60), 120);
    myGLCD.setColor(255, 255, 255);
    myGLCD.drawRoundRect (10 + (x * 60), 70, 60 + (x * 60), 120);
    if (x < 4)
      myGLCD.printNumI(x + 2, 27 + (x * 60), 87);
  }
  myGLCD.print("6", 267, 87);
  // Draw the 3rd row of buttons
  for (x = 2; x < 5; x++)
  {
    myGLCD.setColor(0, 0, 255);
    myGLCD.fillRoundRect (10 + (x * 60), 130, 60 + (x * 60), 180);
    myGLCD.setColor(255, 255, 255);
    myGLCD.drawRoundRect (10 + (x * 60), 130, 60 + (x * 60), 180);
    myGLCD.printNumI(x + 4, 27 + (x * 60), 147);
  }
  // Draw the 4th row of buttons
  for (x = 2; x < 5; x++)
  {
    myGLCD.setColor(0, 0, 255);
    myGLCD.fillRoundRect (10 + (x * 60), 190, 60 + (x * 60), 230);
    myGLCD.setColor(255, 255, 255);
    myGLCD.drawRoundRect (10 + (x * 60), 190, 60 + (x * 60), 230);
    if (x == 2) myGLCD.print("C", 27 + (x * 60), 207);
    else if (x == 3) myGLCD.print("0", 27 + (x * 60), 207);
    else myGLCD.print("OK", 24 + (x * 60), 207);
  }
  myGLCD.print("AutoCare", 0, 0);
  myGLCD.print("Situation", 0, 20);
  myGLCD.print("To do", 0, 120);
  //  myGLCD.setColor(0, 0, 255);
  //  myGLCD.fillRoundRect (10, 130, 150, 180);
  //  myGLCD.setColor(255, 255, 255);
  //  myGLCD.drawRoundRect (10, 130, 150, 180);
  //  myGLCD.print("Clear", 40, 147);
  //  myGLCD.setColor(0, 0, 255);
  //  myGLCD.fillRoundRect (160, 130, 300, 180);
  //  myGLCD.setColor(255, 255, 255);
  //  myGLCD.drawRoundRect (160, 130, 300, 180);
  //  myGLCD.print("Enter", 190, 147);
  //  myGLCD.setBackColor (0, 0, 0);
}
void drawButtons2()
{
  myGLCD.print("NovaProbe", 0, 0);
  myGLCD.print("Back", 200, 0);
  myGLCD.print("Duration", 0, 20);
  myGLCD.print("Delay", 200, 20);
  myGLCD.print("Pulse:", 0, 200);
  myGLCD.print("Flow:", 200, 200);
}

void updateStr(int val)
{
  if (stCurrentLen < 20)
  {
    stCurrent[stCurrentLen] = val;
    stCurrent[stCurrentLen + 1] = '\0';
    stCurrentLen++;
    myGLCD.setColor(0, 255, 0);
    myGLCD.print(stCurrent, LEFT, 224);
  }
  else
  {
    myGLCD.setColor(255, 0, 0);
    myGLCD.print("BUFFER FULL!", CENTER, 192);
    delay(500);
    myGLCD.print("            ", CENTER, 192);
    delay(500);
    myGLCD.print("BUFFER FULL!", CENTER, 192);
    delay(500);
    myGLCD.print("            ", CENTER, 192);
    myGLCD.setColor(0, 255, 0);
  }
}

// Draw a red frame while a button is touched
void waitForIt(int x1, int y1, int x2, int y2)
{
  myGLCD.setColor(255, 0, 0);
  myGLCD.drawRoundRect (x1, y1, x2, y2);
  while (myTouch.dataAvailable())
    myTouch.read();
  myGLCD.setColor(255, 255, 255);
  myGLCD.drawRoundRect (x1, y1, x2, y2);
}

/*************************
**  Required functions  **
*************************/

void setup()
{
  // Initial setup
  myGLCD.InitLCD();
  myGLCD.clrScr();

  myTouch.InitTouch();
  myTouch.setPrecision(PREC_MEDIUM);

  myGLCD.setFont(BigFont);
  myGLCD.setBackColor(0, 0, 255);
  drawButtons();

}

void loop()
{
  int buf[318];
  int x, x2;
  if (screen >= 2)
  {
    if (screen == 2)
    {
      myGLCD.clrScr();
      drawButtons2();
      screen++;
    }

    // Draw a moving sinewave
    x = 1;
    for (int i = 1; i < (318 * 20); i++)
    {
      x++;
      if (x == 319)
        x = 1;
      if (i > 319)
      {
        if ((x == 159) || (buf[x - 1] == 119))
          myGLCD.setColor(0, 0, 255);
        else
          myGLCD.setColor(0, 0, 0);
        myGLCD.drawPixel(x, buf[x - 1]);
      }
      myGLCD.setColor(0, 255, 255);
      y = 119 + (sin(((i * 1.1) * 3.14) / 180) * (90 - (i / 100)));
      myGLCD.drawPixel(x, y);
      buf[x - 1] = y;


    }
    //clear screen
    myGLCD.setColor(0, 0, 0);
    myGLCD.fillRect(1, 40, 318, 180);
    if (myTouch.dataAvailable())
    {
      myTouch.read();
      x = myTouch.getX();
      y = myTouch.getY();
      if ((y >= 0) && (y <= 60) && (x >= 200) && (x <= 250)) // back
      {
        screen = 0;
        myGLCD.clrScr();
        drawButtons();
      }
      delay(500);
    }

  }
  //  while (true)
  else
  {
    if (myTouch.dataAvailable())
    {
      myTouch.read();
      x = myTouch.getX();
      y = myTouch.getY();

      if ((y >= 10) && (y <= 60)) // 1st row
      {
        if ((x >= 130) && (x <= 180)) // Button: 1
        {
          waitForIt(130, 10, 180, 60);
          updateStr('1');
        }
        if ((x >= 190) && (x <= 240)) // Button: 2
        {
          waitForIt(190, 10, 240, 60);
          updateStr('2');
        }
        if ((x >= 250) && (x <= 300)) // Button: 3
        {
          waitForIt(250, 10, 300, 60);
          updateStr('3');
        }
      }

      if ((y >= 70) && (y <= 120)) // 2nd row
      {
        if ((x >= 130) && (x <= 180)) // Button: 4
        {
          waitForIt(130, 70, 180, 120);
          updateStr('4');
        }
        if ((x >= 190) && (x <= 240)) // Button: 5
        {
          waitForIt(190, 70, 240, 120);
          updateStr('5');
        }
        if ((x >= 250) && (x <= 300)) // Button: 6
        {
          waitForIt(250, 70, 300, 120);
          updateStr('6');
        }
      }
      if ((y >= 130) && (y <= 180)) // 3rd row
      {
        if ((x >= 130) && (x <= 180)) // Button: 6
        {
          waitForIt(130, 130, 180, 180);
          updateStr('6');
        }
        if ((x >= 190) && (x <= 240)) // Button: 7
        {
          waitForIt(190, 130, 240, 180);
          updateStr('7');
        }
        if ((x >= 250) && (x <= 300)) // Button: 8
        {
          waitForIt(250, 130, 300, 180);
          updateStr('8');
        }
      }
      if ((y >= 190) && (y <= 230)) // 4th row
      {
        if ((x >= 130) && (x <= 180)) // Button: Clear
        {
          waitForIt(130, 190, 180, 230);
          stCurrent[0] = '\0';
          stCurrentLen = 0;
          myGLCD.setColor(0, 0, 0);
          myGLCD.fillRect(0, 224, 319, 239);
        }
        if ((x >= 190) && (x <= 240)) // Button: O
        {
          waitForIt(190, 190, 240, 230);
          updateStr('0');
        }
        if ((x >= 250) && (x <= 300)) // Button: OK
        {
          waitForIt(250, 190, 300, 230);
          myGLCD.setColor(0, 255, 0);
          myGLCD.print("Parameters Set", LEFT, 192);
          screen++;
        }
      }


    }
  }
}
